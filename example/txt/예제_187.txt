-- 예제_187 SQL로 머신러닝 구현하기9(신경망)

-- 1. 머신러닝 모델을 훈련시킬 데이터를 만듭니다. 

DROP TABLE CONCRETE;

CREATE TABLE CONCRETE
(  C_ID          NUMBER(10),
  CEMENT      NUMBER(20,4),
  SLAG	        NUMBER(20,4),
  ASH	        NUMBER(20,4),
  WATER	NUMBER(20,4),
  SUPERPLASTIC NUMBER(20,4),
  COARSEAGG	 NUMBER(20,4),
  FINEAGG	 NUMBER(20,4),
  AGE	         NUMBER(20,4),
  STRENGTH     NUMBER(20,4)  );
  
-- 데이터 입력: SQL Developer를 이용해서 concrete.csv 를 CONCRETE 테이블에 입력합니다.

SELECT COUNT(*) FROM CONCRETE;
-- 1030

--2. 훈련 데이터와 테스트 데이터를 9대 1로 분리합니다. 

DROP TABLE CONCRETE_TRAIN; 

CREATE TABLE CONCRETE_TRAIN
AS
   SELECT *
     FROM CONCRETE
     WHERE C_ID < 931;

DROP TABLE CONCRETE_TEST;

CREATE TABLE CONCRETE_TEST
AS
   SELECT *
     FROM CONCRETE
     WHERE C_ID >= 931;

-- 3. 머신 러닝 모델의 환경설정을 위한 정보가 들어있는 테이블을 생성합니다. 

DROP TABLE SETTINGS_GLM;

CREATE TABLE SETTINGS_GLM
AS
SELECT *
  FROM TABLE (DBMS_DATA_MINING.GET_DEFAULT_SETTINGS)
  WHERE SETTING_NAME LIKE '%GLM%';

BEGIN

  INSERT INTO SETTINGS_GLM(SETTING_NAME, SETTING_VALUE)
    VALUES (DBMS_DATA_MINING.ALGO_NAME, DBMS_DATA_MINING.ALGO_NEURAL_NETWORK);
  
  INSERT INTO SETTINGS_GLM (SETTING_NAME, SETTING_VALUE)
    VALUES (DBMS_DATA_MINING.PREP_AUTO, DBMS_DATA_MINING.PREP_AUTO_ON);

END;
/

-- 4. 머신러닝 모델을 생성합니다.

BEGIN
 DBMS_DATA_MINING.DROP_MODEL('MD_GLM_MODEL');
END;
/

BEGIN
   DBMS_DATA_MINING.CREATE_MODEL(
      MODEL_NAME          => 'MD_GLM_MODEL',
      MINING_FUNCTION     => DBMS_DATA_MINING.REGRESSION,
      DATA_TABLE_NAME      => 'CONCRETE_TRAIN',
      CASE_ID_COLUMN_NAME => 'C_ID',
      TARGET_COLUMN_NAME => 'STRENGTH',
      SETTINGS_TABLE_NAME => 'SETTINGS_GLM');
END;
/

-- 5. 생성된 모델을 확인합니다.

SELECT MODEL_NAME,
          ALGORITHM,
          MINING_FUNCTION
  FROM ALL_MINING_MODELS
  WHERE MODEL_NAME = 'MD_GLM_MODEL';

-- 6. 인공신경망의 환경 구성정보를 확인합니다. 

SELECT SETTING_NAME, SETTING_VALUE
  FROM ALL_MINING_MODEL_SETTINGS
  WHERE MODEL_NAME = 'MD_GLM_MODEL'  
  AND SETTING_NAME = 'NNET_HIDDEN_LAYERS';

-- 7. 신경망 모델이 예측한 결과를 확인합니다. 

SELECT C_ID, STRENGTH 실제값, ROUND( PREDICTION(MD_GLM_MODEL USING *),2) 예측값
  FROM CONCRETE_TEST;

-- 8. 실제 값과 예측 값 간의 상관관계를 확인합니다. 

SELECT ROUND(CORR(PREDICTED_VALUE, STRENGTH),2) 상관관계
  FROM ( 
            SELECT C_ID, PREDICTION(MD_GLM_MODEL USING *) PREDICTED_VALUE,
                      PREDICTION_PROBABILITY(MD_GLM_MODEL USING * ) PROB, STRENGTH
              FROM CONCRETE_TEST
      );

