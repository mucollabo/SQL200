-- ■ 예제_190 SQL로 머신러닝 구현하기12(SUPPORT VECTOR MACHINE) 

--1. 유방암 데이터를 저장할 테이블을 생성합니다.

DROP TABLE WISC_BC_DATA;

CREATE TABLE WISC_BC_DATA
( ID	                 NUMBER(10),
DIAGNOSIS	         VARCHAR2(5), 
RADIUS_MEAN	         NUMBER(20,7),
TEXTURE_MEAN	         NUMBER(20,7),
PERIMETER_MEAN	         NUMBER(20,7),
AREA_MEAN	         NUMBER(20,7),
SMOOTHNESS_MEAN      NUMBER(20,7),
COMPACTNESS_MEAN     NUMBER(20,7),
CONCAVITY_MEAN	         NUMBER(20,7),
POINTS_MEAN	         NUMBER(20,7),
SYMMETRY_MEAN	         NUMBER(20,7),
DIMENSION_MEAN	         NUMBER(20,7),
RADIUS_SE	         NUMBER(20,7),
TEXTURE_SE	         NUMBER(20,7),
PERIMETER_SE	         NUMBER(20,7),
AREA_SE	                      NUMBER(20,7),
SMOOTHNESS_SE	         NUMBER(20,7),
COMPACTNESS_SE	         NUMBER(20,7),
CONCAVITY_SE	         NUMBER(20,7),
POINTS_SE	         NUMBER(20,7),
SYMMETRY_SE	         NUMBER(20,7),
DIMENSION_SE	         NUMBER(20,7),
RADIUS_WORST	         NUMBER(20,7),
TEXTURE_WORST	         NUMBER(20,7),
PERIMETER_WORST	         NUMBER(20,7),
AREA_WORST	         NUMBER(20,7),
SMOOTHNESS_WORST	 NUMBER(20,7),
COMPACTNESS_WORST	 NUMBER(20,7),
CONCAVITY_WORST            NUMBER(20,7),
POINTS_WORST	         NUMBER(20,7),
SYMMETRY_WORST	         NUMBER(20,7),
DIMENSION_WORST          NUMBER(20,7) );

--데이터 입력: SQL Developer를 이용해서 wisc_bc_data.csv 를 WISC_BC_DATA 테이블에 입력합니다

SELECT COUNT(*) FROM WISC_BC_DATA;
-- 569

-- 2. 유방암 데이터를 훈련데이터와 테스트 데이터로 분리합니다.

DROP TABLE WISC_BC_DATA_TRAINING;

CREATE TABLE WISC_BC_DATA_TRAINING
AS
SELECT *
   FROM WISC_BC_DATA 
   WHERE ROWNUM < 501;

DROP TABLE WISC_BC_DATA_TEST; 

CREATE TABLE WISC_BC_DATA_TEST
AS
SELECT *
  FROM WISC_BC_DATA
MINUS
SELECT *
  FROM WISC_BC_DATA_TRAINING;


-- 3. 머신러닝 모델 구성정보 테이블을 생성합니다. 


DROP TABLE DTSETTINGS;

CREATE TABLE DTSETTINGS
AS
SELECT *
  FROM TABLE (DBMS_DATA_MINING.GET_DEFAULT_SETTINGS)
   WHERE SETTING_NAME LIKE '%GLM%';

BEGIN

   INSERT INTO DTSETTINGS
     VALUES (DBMS_DATA_MINING.ALGO_NAME, 'ALGO_SUPPORT_VECTOR_MACHINES');

   INSERT INTO DTSETTINGS
     VALUES (DBMS_DATA_MINING.PREP_AUTO, 'ON');

   INSERT INTO DTSETTINGS
     VALUES (DBMS_DATA_MINING.SVMS_KERNEL_FUNCTION, 'SVMS_GAUSSIAN');

   COMMIT;
END;
/

-- 4. 서포트 백터 머신(support vector machine) 모델을 생성합니다. 

BEGIN
  DBMS_DATA_MINING.DROP_MODEL('WC_MODEL');
END;
/

BEGIN
   DBMS_DATA_MINING.CREATE_MODEL (
      MODEL_NAME            => 'WC_MODEL',
      MINING_FUNCTION       => DBMS_DATA_MINING.CLASSIFICATION,
      DATA_TABLE_NAME       => 'WISC_BC_DATA_TRAINING',
      CASE_ID_COLUMN_NAME   => 'ID',
      TARGET_COLUMN_NAME    => 'DIAGNOSIS',
      SETTINGS_TABLE_NAME   => 'DTSETTINGS');
END;
/

-- 5. 머신러닝 모델을 확인합니다. 

SELECT MODEL_NAME,
          ALGORITHM,
          MINING_FUNCTION
  FROM ALL_MINING_MODELS
 WHERE MODEL_NAME = 'WC_MODEL';

-- 6. 머신러닝 모델의 구성정보를 확인합니다.

SELECT SETTING_NAME, SETTING_VALUE
  FROM ALL_MINING_MODEL_SETTINGS
  WHERE MODEL_NAME = 'WC_MODEL';


-- 7. 서포트 백터 머신러닝 모델의 성능정보를 확인합니다. 


DROP TABLE WC_DATA_TEST_MATRIX;
      
CREATE OR REPLACE VIEW VIEW_WISC_BC_DATA_TEST
AS
SELECT ID, DIAGNOSIS, 
          PREDICTION(WC_MODEL USING *) PREDICTED_VALUE,
          PREDICTION_PROBABILITY(WC_MODEL USING * ) PROBABILITY
 FROM WISC_BC_DATA_TEST;



-- 8. 모델이 테스트 데이터를 악성으로 예측했는지 양성으로 예측했는지 확인합니다.


SELECT ID 환자번호, DIAGNOSIS 실제값, PREDICTED_VALUE 예측값, PROBABILITY 예측확률
  FROM VIEW_WISC_BC_DATA_TEST
  WHERE  id in (87930, 91858, 92751, 842517, 845636);


-- 9. 서포트 벡터 머신 모델의 성능을 확인합니다. 

SET  SERVEROUTPUT ON

DECLARE
   V_ACCURACY NUMBER;
BEGIN
   DBMS_DATA_MINING.COMPUTE_CONFUSION_MATRIX (
      ACCURACY => V_ACCURACY,
      APPLY_RESULT_TABLE_NAME => 'VIEW_WISC_BC_DATA_TEST',
      TARGET_TABLE_NAME => 'WISC_BC_DATA_TEST',
      CASE_ID_COLUMN_NAME => 'ID',
      TARGET_COLUMN_NAME => 'DIAGNOSIS',
      CONFUSION_MATRIX_TABLE_NAME => 'WC_DATA_TEST_MATRIX',
      SCORE_COLUMN_NAME => 'PREDICTED_VALUE',
      SCORE_CRITERION_COLUMN_NAME => 'PROBABILITY',
      COST_MATRIX_TABLE_NAME => NULL,
      APPLY_RESULT_SCHEMA_NAME => NULL,
      TARGET_SCHEMA_NAME => NULL,
      COST_MATRIX_SCHEMA_NAME => NULL,
      SCORE_CRITERION_TYPE => 'PROBABILITY');
   DBMS_OUTPUT.PUT_LINE('**** MODEL ACCURACY ****: ' || ROUND(V_ACCURACY,4));
END;
/















































